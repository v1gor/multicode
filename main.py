# coding: utf8
# -*- coding: utf-8 -*-
import telebot
import constants
import requests
import json
from pydub import AudioSegment
from time import sleep
import os
import os.path
from ffmpy import FFmpeg
import glob
from collections import Counter

bot = telebot.TeleBot(constants.token)
url = 'https://api.telegram.org/bot332753801:AAHR3-9HtMCvzfhNNKHdmHcC4vOGru_nsfQ/getUpdates'
API_ENDPOINT = 'https://api.wit.ai/speech'

#bot.send_message(303852308, "testt")
print(bot.get_me())

@bot.message_handler(commands=["start"])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row('‚ùî–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',  '‚è∞–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É')
    bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! MultiCode speech bot —è –ø–æ–º–æ–≥—É –≤–∞–º —É–ª—É—á—à–∏—Ç—å –≤–∞—à—É —Ä–µ—á—å! –ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Å–ª–æ–≤ –ø–∞—Ä–∞–∑–∏—Ç–æ–≤ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.. –î–ª—è –Ω–∞—á–∞–ª–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∑–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª–µ.', reply_markup = user_markup )


def log(message, answer):
    from datetime import datetime
    print(datetime.now())
    print("—Å–º—Å –æ—Ç [0] [1]. (id = [2]) \n –¢–µ–∫—Å—Ç - [3]".format(message.from_user.first_name, message.from_user.last_name, str(message.from_user.id), message.text) )

def read_audio(WAVE_FILENAME):
    # function to read audio(wav) file
    with open(WAVE_FILENAME, 'rb') as f:
        audio = f.read()
    return audio

@bot.message_handler(content_types=["text"])
def handle_text(message):
    answer = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ —á—Ç–æ –Ω–∏–±—É–¥—å"
    if message.text == "‚ùî–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row('‚ùî–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', '‚è∞–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É')
        instruction = "1) –ù–∞–∂–∏–º–∏—Ç–µ –∏ –∑–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º –∫—Ä–∞—é –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ —Å–≤–æ—é —Ä–µ—á—å. \n 2) –ü–æ—Å–ª–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ: \n 1. –≤–∞—à —Ç–µ–∫—Å—Ç \n2. –°–ª–æ–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ. \n 3. –ò –∫—Å—Ç–∞—Ç–∏ —è –∑–∞–º–µ—á—É –≤–∞—à–∏ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞"

        bot.send_message(message.from_user.id, instruction, reply_markup = user_markup)

    elif message.text == "‚è∞–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É":
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row( '–ù–∞–∑–∞–¥')
        instalka = "—Å–∫–æ—Ä–æ –±—É–¥–µ—Ç.. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –∫–æ–≥–¥–∞ —è –±—É–¥—É –≤–∞—Å —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Ç–æ–º —á—Ç–æ –≤–∞–º –ø–æ—Ä–∞ '–≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è'"
        bot.send_message(message.from_user.id, instalka, reply_markup = user_markup)
    else:
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row('‚ùî–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', '‚è∞–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É')
        bot.send_message(message.from_user.id, answer, reply_markup = user_markup)

@bot.message_handler(content_types=["voice"])
def handle_voice(message):

    data = requests.get(url, None)
    if data:
        data = data.text
        json_data = json.loads(data)

        if not json_data['result']:
            bot.send_message(message.from_user.id, 'Resend the message please')

        else:
            bot.send_message(message.from_user.id, 'Wait please')
            file_idwka = json_data['result'][0]['message']['voice']['file_id']
            duration = json_data['result'][0]['message']['voice']['duration']
            file_path_urlq = 'https://api.telegram.org/bot332753801:AAHR3-9HtMCvzfhNNKHdmHcC4vOGru_nsfQ/getFile?file_id=' + file_idwka
            data1 = requests.get(file_path_urlq).text
            json_data1 = json.loads(data1)
            file_pathwka = json_data1['result']['file_path']

            print("downloading")
            url_file = 'https://api.telegram.org/file/bot332753801:AAHR3-9HtMCvzfhNNKHdmHcC4vOGru_nsfQ/' + file_pathwka
            requests.get(url_file)


            g = requests.get(url_file, stream=True)
            voice_filename = "voice.mp3"

            with open(voice_filename, "wb") as o:
                  o.write(g.content)



            #song = AudioSegment.from_mp3("C:/Users/—å–æ–∏–æ/Desktop/jaimai/voice.mp3")
            #song.export("out.ogg", format="ogg")  # Is the same as:
            #song.export("out.ogg", format="ogg", codec="libvorbis")
            #AudioSegment.from_ogg("voice.mp3").export("voice.mp3", format="mp3")

            AudioSegment.from_file(voice_filename, "ogg").export(voice_filename, format="mp3")
            #resp = client.speech(open(voice_filename, 'rb'), None, {'Content-Type': 'audio/mpeg3'})

            audio = read_audio(voice_filename)
            headers = {'authorization': 'Bearer ' + 'C6RBEQMC3A7BCNCN4BSJCCLNYGMVFL2F','Content-Type': 'audio/mpeg3'}
            resp = requests.post(API_ENDPOINT, headers = headers, data = audio)
            respon = json.loads(resp.content)
            user_output = respon['_text']
            bot.send_message(message.from_user.id, user_output)

            user_words = user_output.split()

            for item in range (0,int(len(user_words))):
                user_words[item] = user_words[item].lower()

            freq_words = []

            counter1 = Counter(user_words)
            for key, value in counter1.items():
                if value >=3:
                    freq_words.append(key)

            if freq_words:
                bot.send_message(message.from_user.id, '–í—ã —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞ :\n')
                for item in freq_words:
                    bot.send_message(message.from_user.id, '"'+item+'"')

            #------------------------------------------------#
            with open('przt.txt', 'r') as f:
                parazits = f.readlines()
            arr = []
            prz_detected = []
            for i in range (0,int(len(parazits))):
                arr.append(parazits[i].strip())

            for word in user_words:
                for przt in arr:
                    if word == przt:
                       prz_detected.append(word)

            nodup_prz = Counter(prz_detected)
            if nodup_prz:
                bot.send_message(message.from_user.id,'üêõ–í–∞—à–∏ —Å–ª–æ–≤–∞ –ø–∞—Ä–∞–∑–∏—Ç—ã: ')
                for key in nodup_prz:
                    bot.send_message(message.from_user.id, '"'+key+'"')

            if not nodup_prz:
                bot.send_message(message.from_user.id, '–í—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü, —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç–µ –±–µ–∑ —Å–ª–æ–≤ –ø–∞—Ä–∞–∑–∏—Ç–æ–≤ üëçüëç')

            duration = int(duration)
            total_words = len(user_words)

            if int(duration) == 0:
                bot.send_message(message.from_user.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ä–µ–¥–Ω—é—é —Å–∫–æ—Ä–æ—Å—Ç—å –≤–∞—à–µ–≥–æ —á—Ç–µ–Ω–∏—è  üëª')
            elif int(duration) > 0:
                vel = int(total_words)/int(duration)
                bot.send_message(message.from_user.id,'–í–∞—à–∞ —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ '+ str(round(vel,2)) + ' —Å–ª–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É')
            if vel >= 2.3:
                bot.send_message(message.from_user.id, '–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ, –≤–∞–º —Å–ª–µ–¥—É–µ—Ç —É–º–µ–Ω—à–∏—Ç—å —Ç–µ–º–ø.üèÉ')
            elif vel <2.3 and vel >= 1.7:
                 bot.send_message(message.from_user.id, '–°–∫–æ—Ä–æ—Å—Ç—å –≤–∞—à–µ–π —Ä–µ—à–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è.üëç')
            elif vel < 1.7:
                 bot.send_message(message.from_user.id, '–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å –±–µ–∑ –ø–∞—É–∑ üê¢')

            if '*' in user_output:
                bot.send_message(message.from_user.id, '–ú–∞—Ç–µ—Ä–∏—Ç—å—Å—è –Ω–µ —Ö–æ—Ä–æ—à–æ! üòû')







bot.polling(none_stop=True, interval=0)
